function zz = interp_z(info,lats,lons)

[rr,cc] = find(isnan(info.Z));
for i = 1 : numel(rr)
    info.Z(rr(i),cc(i)) = ( ...
        info.Z(rr(i)-1,cc(i)) + ...
        info.Z(rr(i)+1,cc(i)) + ...
        info.Z(rr(i),cc(i)-1) + ...
        info.Z(rr(i),cc(i)+1) ) / 4;
end

if numel(info.lats) < numel(info.Z)
    lonsE = [ ...
        info.lons(numel(info.lons)-100:numel(info.lons)-1)-360, ...
        info.lons, ...
        info.lons(2:100)+360 ];
    latsE = [ info.lats, max(info.lats)+1 ];
    ZE = [ ...
        info.Z(:,numel(info.lons)-100:numel(info.lons)-1), ...
        info.Z, ...
        info.Z(:,2:100) ];
    ZE = [ ZE; mean(ZE(size(ZE,1),:))*ones(1,size(ZE,2)) ];
    zz = interp2( ...
        lonsE, latsE, ZE, ...
        lons,  lats, ...
        'linear',  NaN );
else
    maxlat = max(max(info.lats));
    zmaxlat = mean(info.Z(find(info.lats(:)==maxlat)));
    
    F = scatteredInterpolant( ...
        [ info.lons(:); -190;190 ], ...
        [ info.lats(:); 91;91 ], ...
        [ info.Z(:); zmaxlat;zmaxlat ], ...
        'linear', 'linear' );
    
    clons1 = [ -179.5 : 0.1 : 179.5 ];
    clats1 = [  -88 : 0.1 :  90.5 ];
    clons = zeros( numel(clons1), numel(clats1) ); 
    clats = zeros( numel(clons1), numel(clats1) ); 
    for i = 1 : numel(clats1)
        clons(:,i) = clons1';
    end
    for i = 1 : numel(clons1)
        clats(i,:) = clats1;
    end
    cz = F(clons,clats);
    
    clons1E = [ ...
        clons1(numel(clons1)-99:numel(clons1)-1)-360, ...
        clons1, ...
        clons1(2:100)+360 ];
    czE = [ cz(numel(clons1)-99:numel(clons1)-1,:); cz; cz(2:100,:) ];
    
    zz = interp2( ...
        clons1E, clats1, czE', ...
        lons,    lats, ...
        'linear', NaN );
end

assert(nnz(isnan(zz))==0);
end